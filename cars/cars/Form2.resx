<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ooAooooAooooAooooAooooAooooAooooAooooAooooAooooAooooAooooAooooD/2Q==
</value>
  </data>
</root>